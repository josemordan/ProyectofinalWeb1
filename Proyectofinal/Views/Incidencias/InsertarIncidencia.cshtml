@model Modelos.Incidencias.Incidencia

@{
    ViewBag.Title = "Registrar Incidencia";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <br />
    <div class="container animated 	pulse">
        <div class="row justify-content-md-center">
            <div class="col-md-8">
                <div class="card" style="border:0px">
                    <div class="card-header bg-success text-white text-center">
                        <h5>Registrar Incidencia</h5>
                        @Html.ActionLink("Ir a la lista", "Incidencias", null, new { style = "color:black" })
                    </div>
                    <div class="card-body">
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group" style="margin-left:40px">
                                        <b>@Html.Label("Vehículo", htmlAttributes: new { @class = "control-label" })</b>
                                        <div>
                                            @{
                                                if (Model.Vehiculos != null)
                                                {
                                                    @Html.DropDownListFor(model => model.VehiculoID, Model.Vehiculos.Select(s => new SelectListItem { Value = s.ID.ToString(), Text = s.Chasis.ToString() }), new { @class = "form-control" })
                                                }
                                            }
                                            @Html.ValidationMessageFor(model => model.VehiculoID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <b>@Html.Label("Taller", htmlAttributes: new { @class = "control-label" })</b>
                                        <div>
                                            @{
                                                if (Model.Talleres != null)
                                                {
                                                    @Html.DropDownListFor(model => model.TallerID, Model.Talleres.Select(s => new SelectListItem { Value = s.ID.ToString(), Text = s.Nombre.ToString() }), new { @class = "form-control" })
                                                }
                                            }
                                            @Html.ValidationMessageFor(model => model.TallerID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">                                
                                <div class="col-md-6">
                                    <div class="form-group" style="margin-left:40px">
                                        <b>@Html.Label("Fecha Entrada", htmlAttributes: new { @class = "control-label" })</b>
                                        @Html.EditorFor(model => model.Fecha_Entrada, new { htmlAttributes = new { @class = "form-control", @type = "Date" }} )
                                        @Html.ValidationMessageFor(model => model.Fecha_Entrada, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <b>@Html.Label("Fecha Salida", htmlAttributes: new { @class = "control-label" })</b>
                                        @Html.EditorFor(model => model.Fecha_Salida, new { htmlAttributes = new { @class = "form-control", @type = "Date" }} )
                                        @Html.ValidationMessageFor(model => model.Fecha_Salida, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group" style="margin-left:40px">
                                        <b>@Html.Label("Descripción", htmlAttributes: new { @class = "control-label" })</b>
                                        @Html.TextAreaFor(model => model.Descripcion, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <b>@Html.Label("Completada", htmlAttributes: new { @class = "control-label" })</b>
                                        @Html.EditorFor(model => model.Completada, new { htmlAttributes = new { @class = "form-control col-md-2"} })
                                        @Html.ValidationMessageFor(model => model.Completada, "", new { @class = "text-danger" })
                                    </div> 
                                </div>
                            </div>
                            <br/>
                            <Center> 
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-14">
                                        <input type="submit" value="Registrar" class="btn btn-success btn-block" />
                                    </div>
                                </div>
                            </Center>
                        </div>
                    </div>
                </div> 
            </div>
        </div>
    </div>
} 