@model Modelos.Vehiculos.Vehiculo

@{
    ViewBag.Title = "ModificarVehiculo";
}

@{

    var transmision = new List<SelectListItem>
{
        new SelectListItem {Text="Automatica", Value ="Automatica",Selected=true},
        new SelectListItem {Text="Mecanica", Value ="Automatica"},
        new SelectListItem {Text="Mixta", Value ="Mixta"}

    };
    var combustible = new List<SelectListItem>
{
        new SelectListItem {Text="Gasolina", Value ="Gasolina",Selected=true},
        new SelectListItem {Text="Gas Natural", Value ="Gas Natural"},
        new SelectListItem {Text="Diesel", Value ="Diesel"},
        new SelectListItem {Text="GLP", Value ="GLP"}

    };
}
<center>
    <h2>Modificar Vehiculo</h2>
</center>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <hr />
    <div style="padding-left:100px">
        <div class="col-md-12 ">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <dl class="dl-horizontal col-md-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.Chasis, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Chasis, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Chasis, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Placa, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Placa, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Placa, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Transmision, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Transmision, transmision, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Transmision, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Combustible, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Combustible, combustible, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Combustible, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Anio, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Anio, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Anio, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.Label("Modelo", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @{
                            if (Model.Modelos != null)
                            {
                                @Html.DropDownListFor(model => model.ModeloID, Model.Modelos.Select(s => new SelectListItem { Value = s.ID.ToString(), Text = s.Nombre.ToString() }), new { htmlAttributes = new { @class = "form-control" } })
                            }
                        }
                        @Html.ValidationMessageFor(model => model.ModeloID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Color", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @{
                            if (Model.Colores != null)
                            {
                                @Html.DropDownListFor(model => model.ColorID, Model.Colores.Select(s => new SelectListItem { Value = s.ID.ToString(), Text = s.Nombre.ToString() }), new { htmlAttributes = new { @class = "form-control" } })
                            }
                        }
                        @Html.ValidationMessageFor(model => model.ColorID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Empleado", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @{
                            if (Model.Empleados != null)
                            {
                                @Html.DropDownListFor(model => model.EmpleadoID, Model.Empleados.Select(s => new SelectListItem { Value = s.ID.ToString(), Text = s.Nombre.ToString() }), new { htmlAttributes = new { @class = "form-control" } })
                            }
                        }
                        @Html.ValidationMessageFor(model => model.EmpleadoID, "", new { @class = "text-danger" })
                    </div>
                </div>




                <div class="form-group">
                    @Html.LabelFor(model => model.Mantenimiento, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Mantenimiento)
                            @Html.ValidationMessageFor(model => model.Mantenimiento, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Guardar" class="btn btn-success" />
                    </div>
                </div>
            </dl>
        </div>
    </div>
}
